{"ast":null,"code":"export var calcDate = function calcDate(startTime, endTime) {\n  var monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  var checkStart = Math.abs(new Date() - new Date(startTime));\n\n  if (checkStart < 0) {\n    var dd = String(new Date(startTime).getDate()).padStart(2, \"0\");\n    var mm = monthNames[String(new Date(startTime).getMonth())];\n    var yyyy = new Date(startTime).getFullYear();\n    var hour = new Date(startTime).getHours();\n    var minus = new Date(startTime).getMinutes();\n    return \"Early start <br/> at \".concat(hour, \":\").concat(minus, \" </br/> on \").concat(dd, \", \").concat(mm, \" \").concat(yyyy);\n  }\n\n  var checkEnd = Math.abs(new Date() - new Date(endTime));\n\n  if (checkEnd > 0) {\n    var _dd = String(new Date(endTime).getDate()).padStart(2, \"0\");\n\n    var _mm = monthNames[String(new Date(endTime).getMonth())];\n\n    var _yyyy = new Date(endTime).getFullYear();\n\n    var _hour = new Date(endTime).getHours();\n\n    var _minus = new Date(endTime).getMinutes();\n\n    return \"Ended <br/> at \".concat(_hour, \":\").concat(_minus, \" </br/> on \").concat(_dd, \", \").concat(_mm, \" \").concat(_yyyy);\n  }\n};\nexport var formatDate = function formatDate(time) {\n  var monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  var dd = String(new Date(time).getDate()).padStart(2, \"0\");\n  var mm = monthNames[String(new Date(time).getMonth())];\n  var yyyy = new Date(time).getFullYear();\n  return \"\".concat(dd, \", \").concat(mm, \" \").concat(yyyy);\n};\nexport var formatMoney = function formatMoney(money) {\n  return new Intl.NumberFormat(\"vi-VN\", {\n    style: \"currency\",\n    currency: \"VND\",\n    currencyDisplay: \"symbol\",\n    minimumFractionDigits: 0\n  }).format(parseFloat(money));\n};\nexport var keywords = function keywords(str) {\n  return str.split(\" \");\n};","map":{"version":3,"sources":["E:/Nextjs/next-cy/src/lib/helper.js"],"names":["calcDate","startTime","endTime","monthNames","checkStart","Math","abs","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","hour","getHours","minus","getMinutes","checkEnd","formatDate","time","formatMoney","money","Intl","NumberFormat","style","currency","currencyDisplay","minimumFractionDigits","format","parseFloat","keywords","str","split"],"mappings":"AAAA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAYC,OAAZ,EAAwB;AAC9C,MAAMC,UAAU,GAAG,CACjB,KADiB,EAEjB,KAFiB,EAGjB,KAHiB,EAIjB,KAJiB,EAKjB,KALiB,EAMjB,KANiB,EAOjB,KAPiB,EAQjB,KARiB,EASjB,KATiB,EAUjB,KAViB,EAWjB,KAXiB,EAYjB,KAZiB,CAAnB;AAcA,MAAIC,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,IAAIC,IAAJ,KAAa,IAAIA,IAAJ,CAASN,SAAT,CAAtB,CAAjB;;AACA,MAAIG,UAAU,GAAG,CAAjB,EAAoB;AAClB,QAAMI,EAAE,GAAGC,MAAM,CAAC,IAAIF,IAAJ,CAASN,SAAT,EAAoBS,OAApB,EAAD,CAAN,CAAsCC,QAAtC,CAA+C,CAA/C,EAAkD,GAAlD,CAAX;AACA,QAAMC,EAAE,GAAGT,UAAU,CAACM,MAAM,CAAC,IAAIF,IAAJ,CAASN,SAAT,EAAoBY,QAApB,EAAD,CAAP,CAArB;AACA,QAAMC,IAAI,GAAG,IAAIP,IAAJ,CAASN,SAAT,EAAoBc,WAApB,EAAb;AACA,QAAMC,IAAI,GAAG,IAAIT,IAAJ,CAASN,SAAT,EAAoBgB,QAApB,EAAb;AACA,QAAMC,KAAK,GAAG,IAAIX,IAAJ,CAASN,SAAT,EAAoBkB,UAApB,EAAd;AACA,0CAA+BH,IAA/B,cAAuCE,KAAvC,wBAA0DV,EAA1D,eAAiEI,EAAjE,cAAuEE,IAAvE;AACD;;AAED,MAAIM,QAAQ,GAAGf,IAAI,CAACC,GAAL,CAAS,IAAIC,IAAJ,KAAa,IAAIA,IAAJ,CAASL,OAAT,CAAtB,CAAf;;AACA,MAAIkB,QAAQ,GAAG,CAAf,EAAkB;AAChB,QAAMZ,GAAE,GAAGC,MAAM,CAAC,IAAIF,IAAJ,CAASL,OAAT,EAAkBQ,OAAlB,EAAD,CAAN,CAAoCC,QAApC,CAA6C,CAA7C,EAAgD,GAAhD,CAAX;;AACA,QAAMC,GAAE,GAAGT,UAAU,CAACM,MAAM,CAAC,IAAIF,IAAJ,CAASL,OAAT,EAAkBW,QAAlB,EAAD,CAAP,CAArB;;AACA,QAAMC,KAAI,GAAG,IAAIP,IAAJ,CAASL,OAAT,EAAkBa,WAAlB,EAAb;;AACA,QAAMC,KAAI,GAAG,IAAIT,IAAJ,CAASL,OAAT,EAAkBe,QAAlB,EAAb;;AACA,QAAMC,MAAK,GAAG,IAAIX,IAAJ,CAASL,OAAT,EAAkBiB,UAAlB,EAAd;;AACA,oCAAyBH,KAAzB,cAAiCE,MAAjC,wBAAoDV,GAApD,eAA2DI,GAA3D,cAAiEE,KAAjE;AACD;AACF,CAlCM;AAoCP,OAAO,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAClC,MAAMnB,UAAU,GAAG,CACjB,KADiB,EAEjB,KAFiB,EAGjB,KAHiB,EAIjB,KAJiB,EAKjB,KALiB,EAMjB,KANiB,EAOjB,KAPiB,EAQjB,KARiB,EASjB,KATiB,EAUjB,KAViB,EAWjB,KAXiB,EAYjB,KAZiB,CAAnB;AAcA,MAAMK,EAAE,GAAGC,MAAM,CAAC,IAAIF,IAAJ,CAASe,IAAT,EAAeZ,OAAf,EAAD,CAAN,CAAiCC,QAAjC,CAA0C,CAA1C,EAA6C,GAA7C,CAAX;AACA,MAAMC,EAAE,GAAGT,UAAU,CAACM,MAAM,CAAC,IAAIF,IAAJ,CAASe,IAAT,EAAeT,QAAf,EAAD,CAAP,CAArB;AACA,MAAMC,IAAI,GAAG,IAAIP,IAAJ,CAASe,IAAT,EAAeP,WAAf,EAAb;AACA,mBAAUP,EAAV,eAAiBI,EAAjB,cAAuBE,IAAvB;AACD,CAnBM;AAqBP,OAAO,IAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AACpC,SAAO,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AACpCC,IAAAA,KAAK,EAAE,UAD6B;AAEpCC,IAAAA,QAAQ,EAAE,KAF0B;AAGpCC,IAAAA,eAAe,EAAE,QAHmB;AAIpCC,IAAAA,qBAAqB,EAAE;AAJa,GAA/B,EAKJC,MALI,CAKGC,UAAU,CAACR,KAAD,CALb,CAAP;AAMD,CAPM;AASP,OAAO,IAAMS,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAS;AAC/B,SAAOA,GAAG,CAACC,KAAJ,CAAU,GAAV,CAAP;AACD,CAFM","sourcesContent":["export const calcDate = (startTime, endTime) => {\r\n  const monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  var checkStart = Math.abs(new Date() - new Date(startTime));\r\n  if (checkStart < 0) {\r\n    const dd = String(new Date(startTime).getDate()).padStart(2, \"0\");\r\n    const mm = monthNames[String(new Date(startTime).getMonth())];\r\n    const yyyy = new Date(startTime).getFullYear();\r\n    const hour = new Date(startTime).getHours();\r\n    const minus = new Date(startTime).getMinutes();\r\n    return `Early start <br/> at ${hour}:${minus} </br/> on ${dd}, ${mm} ${yyyy}`;\r\n  }\r\n\r\n  var checkEnd = Math.abs(new Date() - new Date(endTime));\r\n  if (checkEnd > 0) {\r\n    const dd = String(new Date(endTime).getDate()).padStart(2, \"0\");\r\n    const mm = monthNames[String(new Date(endTime).getMonth())];\r\n    const yyyy = new Date(endTime).getFullYear();\r\n    const hour = new Date(endTime).getHours();\r\n    const minus = new Date(endTime).getMinutes();\r\n    return `Ended <br/> at ${hour}:${minus} </br/> on ${dd}, ${mm} ${yyyy}`;\r\n  }\r\n};\r\n\r\nexport const formatDate = (time) => {\r\n  const monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  const dd = String(new Date(time).getDate()).padStart(2, \"0\");\r\n  const mm = monthNames[String(new Date(time).getMonth())];\r\n  const yyyy = new Date(time).getFullYear();\r\n  return `${dd}, ${mm} ${yyyy}`;\r\n};\r\n\r\nexport const formatMoney = (money) => {\r\n  return new Intl.NumberFormat(\"vi-VN\", {\r\n    style: \"currency\",\r\n    currency: \"VND\",\r\n    currencyDisplay: \"symbol\",\r\n    minimumFractionDigits: 0,\r\n  }).format(parseFloat(money));\r\n};\r\n\r\nexport const keywords = (str) => {\r\n  return str.split(\" \");\r\n};\r\n"]},"metadata":{},"sourceType":"module"}