{"ast":null,"code":"import { put, takeLatest, all, call } from \"redux-saga/effects\";\nimport Request from \"../utils/request\";\nimport { getProductsSuccess, getProductsError, getSellingProductsSuccess, getSellingProductsError, getHotProductsSuccess, getHotProductsError } from \"../actions/product\";\nimport { GET_PRODUCTS, GET_SELLING_PRODUCTS, GET_HOT_PRODUCTS } from \"../contants/product\";\nimport { useDispatch } from \"react-redux\";\nexport function* getProducts(action) {\n  var _action$payload, _action$payload2;\n\n  const url = `api/products/get?active=1&id_website=4&id_filter=${action !== null && action !== void 0 && (_action$payload = action.payload) !== null && _action$payload !== void 0 && _action$payload.id_fillter ? action === null || action === void 0 ? void 0 : (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.id_fillter : ''}`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getProductsSuccess(response));\n  } catch (error) {\n    yield put(getProductsError(error.message));\n  }\n}\nexport function* getSellingProducts(action) {\n  const url = `api/products/get?active=1&id_website=4&feature=1`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getSellingProductsSuccess(response));\n  } catch (error) {\n    yield put(getSellingProductsError(error.message));\n  }\n}\nexport function* getHotProducts(action) {\n  const url = `api/products/get?active=1&id_website=4&highlight=1&offset=6`;\n\n  try {\n    const response = yield call(Request, url);\n    yield put(getHotProductsSuccess(response));\n  } catch (error) {\n    yield put(getHotProductsError(error.message));\n  }\n}\nexport default function* ProductSaga() {\n  yield all([yield takeLatest(GET_PRODUCTS, getProducts), yield takeLatest(GET_SELLING_PRODUCTS, getSellingProducts), yield takeLatest(GET_HOT_PRODUCTS, getHotProducts)]);\n}","map":{"version":3,"sources":["E:/Nextjs/next-cy/src/sagas/product.js"],"names":["put","takeLatest","all","call","Request","getProductsSuccess","getProductsError","getSellingProductsSuccess","getSellingProductsError","getHotProductsSuccess","getHotProductsError","GET_PRODUCTS","GET_SELLING_PRODUCTS","GET_HOT_PRODUCTS","useDispatch","getProducts","action","url","payload","id_fillter","response","error","message","getSellingProducts","getHotProducts","ProductSaga"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,UAAb,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AAEA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SACIC,kBADJ,EAEIC,gBAFJ,EAGIC,yBAHJ,EAIIC,uBAJJ,EAKIC,qBALJ,EAMIC,mBANJ,QAOO,oBAPP;AASA,SAAQC,YAAR,EAAsBC,oBAAtB,EAA4CC,gBAA5C,QAAmE,qBAAnE;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,OAAO,UAAUC,WAAV,CAAsBC,MAAtB,EAA8B;AAAA;;AACjC,QAAMC,GAAG,GAAI,oDAAmDD,MAAM,SAAN,IAAAA,MAAM,WAAN,uBAAAA,MAAM,CAAEE,OAAR,4DAAiBC,UAAjB,GAA8BH,MAA9B,aAA8BA,MAA9B,2CAA8BA,MAAM,CAAEE,OAAtC,qDAA8B,iBAAiBC,UAA/C,GAA2D,EAAG,EAA9H;;AACA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMjB,IAAI,CAACC,OAAD,EAAUa,GAAV,CAA3B;AACA,UAAMjB,GAAG,CAACK,kBAAkB,CAACe,QAAD,CAAnB,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,UAAMrB,GAAG,CAACM,gBAAgB,CAACe,KAAK,CAACC,OAAP,CAAjB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,kBAAV,CAA6BP,MAA7B,EAAqC;AACxC,QAAMC,GAAG,GAAI,kDAAb;;AACA,MAAI;AACA,UAAMG,QAAQ,GAAG,MAAMjB,IAAI,CAACC,OAAD,EAAUa,GAAV,CAA3B;AACA,UAAMjB,GAAG,CAACO,yBAAyB,CAACa,QAAD,CAA1B,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,UAAMrB,GAAG,CAACQ,uBAAuB,CAACa,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,cAAV,CAAyBR,MAAzB,EAAiC;AACpC,QAAMC,GAAG,GAAI,6DAAb;;AACA,MAAI;AACA,UAAMG,QAAQ,GAAG,MAAMjB,IAAI,CAACC,OAAD,EAAUa,GAAV,CAA3B;AACA,UAAMjB,GAAG,CAACS,qBAAqB,CAACW,QAAD,CAAtB,CAAT;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZ,UAAMrB,GAAG,CAACU,mBAAmB,CAACW,KAAK,CAACC,OAAP,CAApB,CAAT;AACH;AACJ;AAED,eAAe,UAAUG,WAAV,GAAwB;AACnC,QAAMvB,GAAG,CAAC,CACN,MAAMD,UAAU,CAACU,YAAD,EAAeI,WAAf,CADV,EAEN,MAAMd,UAAU,CAACW,oBAAD,EAAuBW,kBAAvB,CAFV,EAGN,MAAMtB,UAAU,CAACY,gBAAD,EAAmBW,cAAnB,CAHV,CAAD,CAAT;AAKH","sourcesContent":["import {put, takeLatest, all, call} from \"redux-saga/effects\";\r\n\r\nimport Request from \"../utils/request\";\r\n\r\nimport {\r\n    getProductsSuccess,\r\n    getProductsError,\r\n    getSellingProductsSuccess,\r\n    getSellingProductsError,\r\n    getHotProductsSuccess,\r\n    getHotProductsError,\r\n} from \"../actions/product\";\r\n\r\nimport {GET_PRODUCTS, GET_SELLING_PRODUCTS, GET_HOT_PRODUCTS} from \"../contants/product\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport function* getProducts(action) {\r\n    const url = `api/products/get?active=1&id_website=4&id_filter=${action?.payload?.id_fillter ? action?.payload?.id_fillter :''}`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getProductsSuccess(response));\r\n    } catch (error) {\r\n        yield put(getProductsError(error.message));\r\n    }\r\n}\r\n\r\nexport function* getSellingProducts(action) {\r\n    const url = `api/products/get?active=1&id_website=4&feature=1`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getSellingProductsSuccess(response));\r\n    } catch (error) {\r\n        yield put(getSellingProductsError(error.message));\r\n    }\r\n}\r\n\r\nexport function* getHotProducts(action) {\r\n    const url = `api/products/get?active=1&id_website=4&highlight=1&offset=6`;\r\n    try {\r\n        const response = yield call(Request, url);\r\n        yield put(getHotProductsSuccess(response));\r\n    } catch (error) {\r\n        yield put(getHotProductsError(error.message));\r\n    }\r\n}\r\n\r\nexport default function* ProductSaga() {\r\n    yield all([\r\n        yield takeLatest(GET_PRODUCTS, getProducts),\r\n        yield takeLatest(GET_SELLING_PRODUCTS, getSellingProducts),\r\n        yield takeLatest(GET_HOT_PRODUCTS, getHotProducts),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}